using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace CS190514
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            string Line;
            STUDENT[] ST = new STUDENT[1000];
            int[] scores = new int[100];
            string[] names = new string[100];
        }
        struct STUDENT
        {
            public string Name;
            public int Score;
            public int BCC;
            public int English;
            public int Chinese;
        }
        Random RN = new Random();
        private void STNum_TextChanged(object sender, EventArgs e)
        {
            checkedListBox1.Items.Clear() ;
            checkedListBox1.Items.Add("Name: 計概 + 英文 + 國文 = 總分");
            if (!int .TryParse (STNum .Text ,out int result))
            {
                STNum.Text = "0";
                return;
            }
            int[,] studentScores = new int[int.Parse(STNum.Text), 4];
            int NameLength;
            string FamilyName;
            for(int i = 0; i < int.Parse(STNum.Text); i++)
            {
                NameLength = RN.Next(3, 8);
                FamilyName = ((char)(65 + RN.Next(0, 26))).ToString();
                for(int j = 1; j <= NameLength; j++)
                {
                    FamilyName += (char)(97 + RN.Next(0, 26));
                }
                for(int k = 1; k <= 3; k++)
                {
                    studentScores[i, k] = RN.Next(0,101);
                    studentScores[i, 0] += studentScores[i, k];
                }
                checkedListBox1.Items.Add(FamilyName + ":" + studentScores[i, 1] + " + " + studentScores[i, 2] + " + " + studentScores[i, 3] + " = " + studentScores[i, 0]);
            }
              

        }

        private void All_Click(object sender, EventArgs e)
        {
            for(int i=0;i<checkedListBox1 .Items.Count; i++)
            {
                checkedListBox1.SetItemChecked(i, true);
            }
        }

        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            //listBox1.Items.Clear();
            //foreach(string  item in checkedListBox1 .CheckedItems)
            //{
            //    listBox1.Items.Add(item);
            //}
        }

        private void English_Click(object sender, EventArgs e)
        {
            listBox1.Items.Clear();
            listBox2.Items.Clear();
            try
            {
                int pos1, pos2;
                for(int i=1;i<checkedListBox1 .Items.Count; i++)
                {
                    pos1 = checkedListBox1.Items[i].ToString().IndexOf("+");
                    pos2 = checkedListBox1.Items[i].ToString().IndexOf("+",pos1 +1);
                    listBox2.Items.Add(checkedListBox1.Items[i].ToString().Substring(pos1 + 2, pos2 - (pos1 + 2) - 1));
                    if(int.Parse (checkedListBox1.Items[i].ToString().Substring(pos1 + 2, pos2 - (pos1 + 2) - 1))>=60)
                    {
                        listBox1.Items.Add(checkedListBox1.Items[i]);
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString(), "錯誤", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void Remove_Click(object sender, EventArgs e)
        {
            if(Counter .Text == "0")
            {
                MessageBox.Show("無資料可移除[先挑選]", "提示訊息", MessageBoxButtons.OK, MessageBoxIcon.Information   );
                return;
            }
            if (listBox1.SelectedIndex == -1)
            {
                MessageBox.Show("請選擇移除項目", "提示訊息", MessageBoxButtons.OK, MessageBoxIcon.Information );
            }
           
                listBox1.Items.RemoveAt(listBox1.SelectedIndex);
                Counter.Text = listBox1.Items.Count.ToString();
           
            
        }

        private void checkedListBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            listBox1.Items.Clear();
            foreach (string item in checkedListBox1.CheckedItems)
            {
                listBox1.Items.Add(item);
            }
        }

        private void listBox1_MouseEnter(object sender, EventArgs e)
        {
            if (listBox1.Items.Count == 0) return;
            int Equal_position, Name_position;
            int Score;
            string Name;
            int Nol_score = 0; string Nol_name = null;
            int Lowest_score = 100 * 3; string Lowest_name = null;
            for(int i=1;i<listBox1 .Items.Count; i++)
            {
                //1.取出總分
                Equal_position = listBox1.Items[i].ToString().IndexOf("=");
                Score = int.Parse(listBox1.Items[i].ToString().Substring(Equal_position + 2));

                //2.取出姓名
                Name_position = listBox1.Items[i].ToString().IndexOf(":");
                Name = listBox1.Items[i].ToString().Substring(0, Name_position);

                //3.比較總分(決掉是否成為最低分?)
                if(Score <Lowest_score)
                {
                    Lowest_score = Score;
                    Lowest_name = Name;
                }

                //4.比較總分(決定是否成為最高分者?)
                if(Score >Nol_score)
                {
                    Nol_score = Score;
                    Nol_name = Name;
                }

            }
        }

        private void listBox1_MouseLeave(object sender, EventArgs e)
        {
            H.Text = "最高分者";
            L.Text = "最低分者";
              
        }

        private void button1_Click(object sender, EventArgs e)
        {
            //Random RN = new Random();
            Form2 FM2 = new Form2();
            //FM2.Show();
            FM2.ShowDialog();

        }

        private void button4_Click(object sender, EventArgs e)
        {
            if(this .FormBorderStyle ==FormBorderStyle.None)
            {
                button4.Text = "Disable ControlBox";
                this.WindowState = FormWindowState.Normal;
                this.FormBorderStyle = FormBorderStyle.Sizable;
            }
            else
            {
                this.FormBorderStyle = FormBorderStyle.None;
                this.WindowState = FormWindowState.Maximized ;
                button4.Text = "Enable ControlBox";
            }
        }

        struct NameScores
        {
            public string Name3s;
            public int Total;

        }

        private void button2_Click(object sender, EventArgs e)
        {
            listBox2.Items.Clear();
        }
    }
}
